// Code generated by dagger-compiler.  Do not edit.
package TurboNGServer.Lobby;

import dagger.internal.BindingsGroup;
import dagger.internal.ModuleAdapter;
import dagger.internal.ProvidesBinding;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class DependencyInjectionModule$$ModuleAdapter extends ModuleAdapter<DependencyInjectionModule> {
  private static final String[] INJECTS = { "members/TurboNGServer.Lobby.Lobby", };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { };

  public DependencyInjectionModule$$ModuleAdapter() {
    super(TurboNGServer.Lobby.DependencyInjectionModule.class, INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, true /*complete*/, false /*library*/);
  }

  @Override
  public DependencyInjectionModule newModule() {
    return new TurboNGServer.Lobby.DependencyInjectionModule();
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(BindingsGroup bindings, DependencyInjectionModule module) {
    bindings.contributeProvidesBinding("TurboNGServer.Lobby.User", new ProvideUserProvidesAdapter(module));
  }

  /**
   * A {@code Binding<TurboNGServer.Lobby.User>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<TurboNGServer.Lobby.User>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideUserProvidesAdapter extends ProvidesBinding<User>
      implements Provider<User> {
    private final DependencyInjectionModule module;

    public ProvideUserProvidesAdapter(DependencyInjectionModule module) {
      super("TurboNGServer.Lobby.User", NOT_SINGLETON, "TurboNGServer.Lobby.DependencyInjectionModule", "provideUser");
      this.module = module;
      setLibrary(false);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<TurboNGServer.Lobby.User>}.
     */
    @Override
    public User get() {
      return module.provideUser();
    }
  }
}
